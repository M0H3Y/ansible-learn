--- 

- hosts: nexus
  name: Install Java and net-tools 
  become: yes 
  become_user: root
  tasks: 
    - name: Update apt repo and Cache 
      apt:
       update_cache: yes 
       cache_valid_time: 3600

    - name: Install Java 8  
      apt: 
       name: openjdk-8-jdk
    - name: Install net-tools 
      apt:
       name: net-tools

    
- hosts: nexus
  name: Download and unpack nexus
  become: yes 
  become_user: root
  tasks: 
    - name: Download Nexus
      register: download_result 
      get_url:
        url: https://download.sonatype.com/nexus/3/latest-unix.tar.gz
        dest: /opt/ 
    - name: Check if Nexus Folder Exists 
      stat: 
        path: /opt/nexus 
      register: stat_result
    - name: Untar Nexus 
      unarchive:
        src: "{{download_result.dest}}"
        dest: /opt/
        remote_src: yes
      when: not stat_result.stat.exists

    - name: Find Nexus Folder 
      find:
        paths: /opt/ 
        patterns: "nexus-*"
        file_type: directory 
      register: find_result 
    - name: Rename Nexus Folder
      shell: mv {{find_result.files[0].path}}  /opt/nexus
      when: not stat_result.stat.exists

- hosts: nexus 
  name: Add nexus user and change the ownership of nexus folders
  become: yes 
  become_user: root
  tasks:
    - name: Add nexus user 
      user:
        name: nexus 
    - name: Change Nexus Dir Ownership 
      file:
       state: directory 
       owner: nexus 
       group: nexus 
       path: /opt/nexus 
       recurse: yes

    - name: Change sonatype-work Dir Ownership 
      file:
       state: directory 
       owner: nexus 
       group: nexus 
       path: /opt/sonatype-work
       recurse: yes
    
    - name: Change Nexus Config to run as nexus user 
      lineinfile:
        path: /opt/nexus/bin/nexus.rc
        line: run_as_user="nexus"
        regexp: '^#run_as_user=""'

- hosts: nexus
  name: start nexus as nexus uesr 
  become: yes
  become_user: nexus 
  tasks:
    - name: Start Nexus 
      command: /opt/nexus/bin/nexus start

    - name: ensure app is running with ps 
      shell: ps aux | grep nexus 
      register: app_status

    - debug: 
       msg: "{{app_status.stdout_lines}}"

    - pause:
         minutes: 1
    - name: ensure app is running with netstat
      shell: netstat -ntlp
      register: app_status

    - debug: 
        msg: "{{app_status.stdout_lines}}"



